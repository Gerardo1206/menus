/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package menus;

import java.awt.Font;
import java.awt.font.TextAttribute;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.w3c.dom.Text;

/**
 *
 * @author ceivg
 */
public class Menus extends javax.swing.JFrame {
    File archivo;
    FileInputStream entrada;
    FileOutputStream salida;
    
    /**
     * Creates new form Menus
     */
    public Menus() {
        initComponents();
    }

    public String AbrirArchivo(File archivo){
        String resultado="";
        try {
            entrada= new FileInputStream(archivo);
            int cea;
            while((cea=entrada.read())!=-1){
                char c=(char)cea;
                resultado+=c;
            }
        } catch (Exception e) {
        }
    return resultado;
    }
    
    public String GuardarArchivo(File archivo,String destino){
        String mensaje=null;
        try {
            salida= new FileOutputStream(archivo);
            byte[] bytxt=destino.getBytes();
            salida.write(bytxt);
            mensaje="Archivo guardado";
        } catch (Exception e) {
        }
        return mensaje;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fC1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mmNuevo = new javax.swing.JMenuItem();
        mmAbrir = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mmSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mmAcercade = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        jMenu1.setText("Archivo");

        mmNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mmNuevo.setText("Nuevo");
        mmNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(mmNuevo);

        mmAbrir.setText("Abrir");
        mmAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(mmAbrir);

        jMenuItem1.setText("Guardar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        mmSalir.setText("Salir");
        mmSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmSalirActionPerformed(evt);
            }
        });
        jMenu1.add(mmSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edicion");

        jMenuItem2.setText("Selecciona todo");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Formato");

        jCheckBoxMenuItem1.setText("Negrita");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setText("Cursiva");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem3.setText("Subrayada");
        jCheckBoxMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jCheckBoxMenuItem3);

        jMenuBar1.add(jMenu4);

        jMenu3.setText("Ayuda");

        mmAcercade.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        mmAcercade.setText("Acerca de...");
        mmAcercade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmAcercadeActionPerformed(evt);
            }
        });
        jMenu3.add(mmAcercade);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mmNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmNuevoActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this, "Â¿Desea guardar el documento actual?", "Nuevo", JOptionPane.YES_NO_CANCEL_OPTION);
        System.out.println(respuesta);
        if (respuesta == 1) {
            txtArea.setText("");
        } else if (respuesta == 0) {
            int resultado = fC1.showSaveDialog(this);
            if (resultado == JFileChooser.APPROVE_OPTION) {
                archivo = fC1.getSelectedFile();
                if (archivo.getName().endsWith("txt")) {
                    String Documento = txtArea.getText();
                    String mensaje = GuardarArchivo(archivo, Documento);
                    if (mensaje != null) {
                        JOptionPane.showMessageDialog(this, "Archivo guardado con exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Ocurrio un error", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_mmNuevoActionPerformed

    private void mmSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mmSalirActionPerformed

    private void mmAcercadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmAcercadeActionPerformed
        JOptionPane.showMessageDialog(this, "Programa creado por Gerardo Crisanto Ulloa, no se que mas deberia poner aqui", "Acerca de", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_mmAcercadeActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        int resultado=fC1.showSaveDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION){
            archivo=fC1.getSelectedFile();
            if(archivo.getName().endsWith("txt")){
                String Documento=txtArea.getText();
                String mensaje=GuardarArchivo(archivo,Documento);
                if(mensaje!=null){
                JOptionPane.showMessageDialog(this, "Archivo guardado con exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
                }else{
                JOptionPane.showMessageDialog(this, "Ocurrio un error", "Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void mmAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmAbrirActionPerformed
        int resultado=fC1.showOpenDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION){
            archivo=fC1.getSelectedFile();
            if(archivo.canRead()){
                if(archivo.getName().endsWith("txt"));{
                    String documento=AbrirArchivo(archivo);
                    txtArea.setText(documento);
                    
                }
                
            }
        }else{
            JOptionPane.showMessageDialog(this, "Archivo invalido","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_mmAbrirActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        txtArea.selectAll();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        if(jCheckBoxMenuItem1.isSelected()){
            Font f= txtArea.getFont();
            Map atributtes=f.getAttributes();
            atributtes.put(TextAttribute.WEIGHT,TextAttribute.WEIGHT_BOLD);
            txtArea.setFont(f.deriveFont(atributtes));
        }else{
            Font f= txtArea.getFont();
            Map atributtes=f.getAttributes();
            atributtes.put(TextAttribute.WEIGHT, -1);
            txtArea.setFont(f.deriveFont(atributtes));
        }
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jCheckBoxMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem3ActionPerformed
        if(jCheckBoxMenuItem3.isSelected()){
            Font f= txtArea.getFont();
            Map atributtes=f.getAttributes();
            atributtes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
            txtArea.setFont(f.deriveFont(atributtes));
        }else{  
            Font f= txtArea.getFont();
            Map atributtes=f.getAttributes();
            atributtes.put(TextAttribute.UNDERLINE, -1);
            txtArea.setFont(f.deriveFont(atributtes));
        }
    }//GEN-LAST:event_jCheckBoxMenuItem3ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        if(jCheckBoxMenuItem2.isSelected()){
            Font f= txtArea.getFont();
            Map atributtes=f.getAttributes();
            atributtes.put(TextAttribute.POSTURE, TextAttribute.POSTURE_OBLIQUE);
            txtArea.setFont(f.deriveFont(atributtes));
        }else{  
            Font f= txtArea.getFont();
            Map atributtes=f.getAttributes();
            atributtes.put(TextAttribute.POSTURE,TextAttribute.POSTURE_REGULAR );
            txtArea.setFont(f.deriveFont(atributtes));
        }
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fC1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem mmAbrir;
    private javax.swing.JMenuItem mmAcercade;
    private javax.swing.JMenuItem mmNuevo;
    private javax.swing.JMenuItem mmSalir;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
